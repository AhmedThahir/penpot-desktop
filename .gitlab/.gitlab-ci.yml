# Prepare:
#   tags:
#     - main
#   stage: .pre
#   only:
#     - production
#   script:
#     - export $(grep -v '^#' .env | xargs)
#     - mkdir /korbs-studio-server/nginx/sites/releases/applications/penpot-desktop/$VERSION/

# # Build
# Windows:
#   tags:
#     - WindowsVM
#   stage: build
#   artifacts:
#      paths:
#        - dist/Penpot Desktop - Setup.exe
#        - dist/latest.yml
#   only:
#     - production
#   script:
#     - npm i
#     - npm run build
#     - Remove-Item -path .\dist\win-unpacked\ -recurse  # This will make sure that the artifact doesn't take a butt load of time to zip up the dist folder I need

# Linux:
#   tags:
#     - main
#   stage: build
#   only:
#     - production
#   script:
#     - if [ -d "dist/" ]; then rm -R dist/; fi # Delete the dist/ folder if it exist
#     - yarn
#     - yarn build

# Deploy
Windows-Ready:
  tags:
    - main
  stage: deploy
  only:
    - main
  # needs:
  #   - Prepare
  #   - Windows
  script:
    - ssh -o "StrictHostKeyChecking=no" $SFTP_USERNAME@$SFTP_IP
    - $SFTP_USERNAME@$SFTP_IP "ls /home/korbs/"
    - $SFTP_USERNAME@$SFTP_IP "ls /"

# Linux-Ready:
#   tags:
#     - main
#   stage: deploy
#   only:
#     - production
#   needs:
#     - Prepare
#     - Linux
#   script:
#     - cd dist/
#     - cloudsmith push rpm korbsstudio/penpot-desktop/any-distro/any-version penpot-desktop*.rpm
#     - cloudsmith push rpm korbsstudio/penpot-desktop/any-distro/any-version penpot-desktop*.deb